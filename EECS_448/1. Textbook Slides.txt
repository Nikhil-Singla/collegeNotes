Scope of Software Engineering: Life-Cycle Models, Software Process, Teams, Tools, Testing, Planning, and Estimating

Software products: Generic Software Systems (provide useful functionality to a range of customers)
Example: large-scale business systems (MS Excel); personal products (Evernote); simple apps/games (Suduko)
Software Engineering Techniques = One-off, Custom Software Systems
Customer has Problems (generates) Requirements for Customer and Developer (implemented by) Developer through Software (helping with) Customers Problem

Project-Based Software Engineering
Starting point: Set of ‘software requirements’ wanted by an external client to support their business processes
Developed by: Company (contractor) who designs and implements a system to deliver functionality.
Customer may request changes that contractor must reflect.
Custom software has a long lifecycle of support (10 years).

Product Software Engineering
Starting point: Business opportunity identified by individual or company, who then develop to take advantage of this opportunity.
Company/Individual design and implement features that realise opportunity and will be useful.
Software development company are responsible for deciding the development timescale, features and changes.
Rapid delivery of product is essential to capture the market.




Relation between UML and programming languages: 
UML = Concepts without counterparts
- Java: Language specific details
Union = Directly mappable parts

/ implies derived attribute
$ implies static attribute

