Data Growth, Data centers and cloud computing.
In the beginning, only mainframe and terminals; Connect to the main terminal.
Next came PC's where Individual work on their own desktops
Our development proceeded by connecting various PC's together.
Finally culminated into The Web by Tim Berners-Lee at CERN in 1989 and publicized in 1991
The Web Protocol was royalty free in 1993. Internet (development started in 1960)
Web grew in size, PC's had to live in expensive data centers (million-server data center)

Data centers:
1) Need electric power
2) Long build time
3) Inflexible investment of capital
4) Specialized skills, (security, failover, load balancing)
5) Time away from core competencies
6) Hard for all but the largest companies to own/run
Solution: Outsource data center - Economy of scale, Webdevs focus on their advantage
Low lead time and capital requirements, Computing becomes a commodity


Data center consume too much electricity (90 bil kW/hr)
Outsource to "clouds": Data center hardware and software to offer computing resources.

Cloud computing represents both cloud storage and provided services
"Cloud computing: Most tech diagrams depict IP using a cloud"
It is a compilation of tech with a new infrastructure paradigm offering better scalibility,
elasticity, business agility, faster startup tie, reduces costs and just-in-time availability of ress.
-> Web-based apps, Databases running elsewhere. Consumer/Enterprise service

On demand availability and delivery of computing services: Cloud computing
Servers, Storage, DB's, Networking, Analytics, Software
The cloud is a very large number of remote servers offered for rent.
Why is it a big deal?

- Cost : Avoid initial capital costs of hardware procurement.
- Startup Time: Don't wait for hardware to start working.
- Server choice: Change power of server as needed.
- Distributed development: Remote working to share work
- Security: Cloud providers security peope are "better", not too many vulnerabilities and equal to your security goals.
- Remote servers: Release server on demand, can be scalable, elastic and resilient.

Scalability: Cope with increasing number of users. Resilience: Software architecture to tolerate server failure.
Elasticity: Scale up or down.

Why not widespread: 
Blackbox: (nothing is visible to client), Losing control
Security: Cloud subject to traditional data/confidentiality issues.
Performance, Uptime: Impact the bottom line 

Basic terms/services: [Software as a Service / Platform as a Service / Infrastructure as a Service]
1) On-Demand Self service
2) Resource Pooling
3) Broad Network Access
4) Rapid Elasticity
5) Measured services

IaaS: Consumer is system admin. Capability provided to consumer is provision processing, storage, networking and
other fundalmental computing resources. Run and deploy arbitrary software.
PaaS: Consumer is dev/system admin. Consumer deploys applications onto the cloud infrastructure using programming 
languages.
SaaS: Consumer is end user, using applications running on cloud.

Service model analogy: